{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/albums/albumDisplay.html","webpack:///./src/app/albums/albumDisplay.ts","webpack:///./src/app/albums/albumEditor.html","webpack:///./src/app/albums/albumEditor.ts","webpack:///./src/app/albums/albumList.html","webpack:///./src/app/albums/albumList.ts","webpack:///./src/app/albums/albumService.ts","webpack:///./src/app/albums/albumSongList.html","webpack:///./src/app/albums/albumSongList.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/artists/artistDisplay.html","webpack:///./src/app/artists/artistDisplay.ts","webpack:///./src/app/artists/artistEditor.html","webpack:///./src/app/artists/artistEditor.ts","webpack:///./src/app/artists/artistList.html","webpack:///./src/app/artists/artistList.ts","webpack:///./src/app/artists/artistService.ts","webpack:///./src/app/business/appConfiguration.ts","webpack:///./src/app/business/entities.ts","webpack:///./src/app/business/httpRequestInterceptor.ts","webpack:///./src/app/business/userInfo.ts","webpack:///./src/app/common/animations.ts","webpack:///./src/app/common/appFooter.html","webpack:///./src/app/common/appFooter.ts","webpack:///./src/app/common/appHeader.html","webpack:///./src/app/common/appHeader.ts","webpack:///./src/app/common/errorDisplay.ts","webpack:///./src/app/common/focusDirective.ts","webpack:///./src/app/common/login.html","webpack:///./src/app/common/login.ts","webpack:///./src/app/options/about.html","webpack:///./src/app/options/about.ts","webpack:///./src/app/options/options.html","webpack:///./src/app/options/options.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div  class=\\\"container\\\" >\\r\\n    \\r\\n    <div class=\\\"btn-group\\\" role=\\\"group\\\" style=\\\"margin-bottom: 10px;\\\" aria-label=\\\"Album Navigation\\\">\\r\\n    <a routerLink=\\\"/albums\\\" class=\\\"btn btn-sm btn-primary\\\"><i class=\\\"fa fa-list\\\"></i> Albums</a>\\r\\n    <a [routerLink]=\\\"['/album/edit',album.Id]\\\" class=\\\"btn btn-sm btn-primary\\\"><i class=\\\"fa fa-edit\\\"></i> Edit</a>\\r\\n    <a [href]=\\\"album.AmazonUrl\\\" class=\\\"btn btn-sm btn-primary\\\"><i class=\\\"fa fa-dollar\\\"></i> Buy</a>\\r\\n\\r\\n    <a [href]=\\\"album.SpotifyUrl\\\" class=\\\"btn btn-sm btn-primary\\\"><i class=\\\"fa fa-volume-up\\\"></i> Listen</a>\\r\\n    <button (click)=\\\"deleteAlbum(album)\\\" class=\\\"btn btn-sm btn-primary\\\"><i class=\\\"fa fa-remove\\\"></i> Delete</button>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"separator\\\"></div>\\r\\n\\r\\n  <error-display [error]=\\\"error\\\"></error-display>\\r\\n\\r\\n  <div class=\\\"row\\\" [@slideIn]=\\\"'in'\\\">\\r\\n    <div class=\\\"col-sm-3\\\">\\r\\n      <img [src]=\\\"album.ImageUrl\\\" *ngIf=\\\"album.ImageUrl\\\" class=\\\"album-image-big\\\" />\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-9\\\">\\r\\n      <h2 class=\\\"album-title-big\\\">\\r\\n        {{album.Title}}\\r\\n      </h2>\\r\\n\\r\\n      <div class=\\\"album-artist\\\">\\r\\n\\r\\n        by <a [routerLink]=\\\"['/artist',album.ArtistId]\\\">{{album.Artist.ArtistName}}</a>\\r\\n        {{(album.Year ? 'in ' + album.Year : '')}}\\r\\n      </div>\\r\\n      <div [innerHTML]=\\\"album.Description\\\" class=\\\"line-breaks\\\"></div>\\r\\n\\r\\n      <div style=\\\"margin: 10px 0\\\" class=\\\"pull-right\\\">\\r\\n        &nbsp;\\r\\n        <a *ngIf=\\\"album.AmazonUrl\\\" [href]=\\\"album.AmazonUrl\\\" class=\\\"btn btn-link btn-sm\\\" target=\\\"_amazon\\\"><i class=\\\"fa fa-dollar\\\"></i> Buy</a> &nbsp;&nbsp;\\r\\n        <a *ngIf=\\\"album.SpotifyUrl\\\" [href]=\\\"album.SpotifyUrl\\\" class=\\\"btn btn-link btn-sm\\\" target=\\\"_spotify\\\"><i class=\\\"fa fa-volume-up\\\"></i> Play</a>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <album-songlist [tracks]=\\\"album.Tracks\\\"></album-songlist>\\r\\n\\r\\n      <!--<table class=\\\" table table-striped small\\\">-->\\r\\n        <!--<tr *ngFor=\\\"let song of album.Tracks\\\">-->\\r\\n          <!--<td>{{song.SongName}}</td>-->\\r\\n          <!--<td>{{song.Length}}</td>-->\\r\\n        <!--</tr>-->\\r\\n      <!--</table>-->\\r\\n\\r\\n      <hr />\\r\\n      More from\\r\\n      <a [routerLink]=\\\"['/artist',album.ArtistId]\\\">\\r\\n        {{album.Artist.ArtistName}}<br />\\r\\n        <img *ngIf=\\\"album.Artist.ImageUrl\\\" [src]=\\\"album.Artist.ImageUrl\\\"\\r\\n             style=\\\"height: 100px; border-radius: 5px;box-shadow: 2px 2px 3px #535353\\\" />\\r\\n      </a>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","﻿import {Album} from './../business/entities';\r\nimport {Component, OnInit, Input, OnDestroy} from '@angular/core';\r\nimport {style, animate, state, transition, trigger} from '@angular/animations';\r\nimport {AlbumService} from \"./albumService\";\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {ErrorInfo} from \"../common/errorDisplay\";\r\nimport {AppConfiguration} from \"../business/appConfiguration\";\r\nimport {slideIn, slideInLeft} from \"../common/animations\";\r\n\r\n@Component({\r\n    selector: 'album-display',\r\n    templateUrl: './albumDisplay.html',\r\n    animations: [ slideIn ]\r\n})\r\nexport class AlbumDisplay implements OnInit {\r\n\r\n  @Input() album:Album = new Album();\r\n  error = new ErrorInfo();\r\n  aniFrame = 'in';\r\n\r\n  constructor(private route: ActivatedRoute,\r\n              private router: Router,\r\n              private config: AppConfiguration,\r\n              private albumService: AlbumService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.config.isSearchAllowed = false;\r\n    this.config.activeTab = \"albums\";\r\n    this.aniFrame = 'in';\r\n\r\n    //console.log(\"AlbumDisplay\");\r\n    if(!this.album.Title) {\r\n      var id = this.route.snapshot.params[\"id\"];\r\n      if (id < 1)\r\n        return;\r\n\r\n      this.albumService.getAlbum(id)\r\n        .subscribe( result => {\r\n          this.album = result;\r\n        }, err => this.error.error(err));\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.aniFrame = 'out';\r\n    console.log(\"ngDestroy\")\r\n  }\r\n\r\n  deleteAlbum(album) {\r\n    this.albumService.deleteAlbum(album)\r\n      .subscribe( result =>{\r\n        this.error.info(\"Album '\"  + album.Title + \"' has been deleted.\");\r\n        setTimeout(() => this.router.navigate([\"/albums\"]), 1500);          \r\n      },\r\n      (err)=> this.error.error(err));\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"container\\\"  >\\r\\n\\r\\n  <div *ngIf=\\\"album.Id !== 0\\\" class=\\\"btn-group\\\" role=\\\"group\\\" style=\\\"margin-bottom: 10px;\\\">\\r\\n    <a routerLink=\\\"/albums\\\" class=\\\"btn btn-sm btn-primary\\\"><i class=\\\"fa fa-list\\\"></i> List</a>\\r\\n    <a [routerLink]=\\\"['/album',album.Id]\\\" class=\\\"btn btn-sm btn-primary\\\"><i class=\\\"fa fa-eye\\\"></i> View</a>\\r\\n    <a [href]=\\\"album.AmazonUrl\\\" class=\\\"btn btn-sm btn-primary\\\"><i class=\\\"fa fa-dollar\\\"></i> Buy</a>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"separator\\\"></div>\\r\\n\\r\\n  <error-display [error]=\\\"error\\\"></error-display>\\r\\n\\r\\n  <div class=\\\"row\\\"  [ngClass]=\\\"{ 'hidden': !loaded}\\\" [@slideIn]=\\\"'in'\\\">\\r\\n\\r\\n    <div class=\\\"col-sm-5\\\">\\r\\n      <form name=\\\"form1\\\" action=\\\"javascript:{}\\\" #form1=\\\"ngForm\\\" novalidate>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"AlbumName\\\">Album Name:</label>\\r\\n          <input id=\\\"AlbumName\\\" type=\\\"text\\\" class=\\\"form-control input-sm\\\"\\r\\n                 placeholder=\\\"Album Name\\\"\\r\\n                 [focus]=\\\"true\\\"\\r\\n                 name=\\\"Title\\\" required\\r\\n                 [(ngModel)]=\\\"album.Title\\\" autofocus />\\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"typeahead-basic\\\">Band Name (Auto):</label>\\r\\n              <input id=\\\"typeahead-basic\\\" type=\\\"text\\\"\\r\\n                     name=\\\"SearchText\\\"\\r\\n                     class=\\\"form-control\\\"                     \\r\\n                     [(ngModel)]=\\\"album.Artist.ArtistName\\\"\\r\\n                     [ngbTypeahead]=\\\"search\\\"                     \\r\\n                     [resultFormatter]=\\\"resultFormatBandListValue\\\"\\r\\n                     [inputFormatter]=\\\"inputFormatBandListValue\\\"\\r\\n                     #instance=\\\"ngbTypeahead\\\"                     \\r\\n                     />\\r\\n          </div>\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"Description\\\">Album Description:</label>\\r\\n          <textarea class=\\\"form-control input-sm\\\" id=\\\"Description\\\"\\r\\n                    placeholder=\\\"Album description or review\\\"\\r\\n                    required\\r\\n                    [(ngModel)]=\\\"album.Description\\\"\\r\\n                    name=\\\"Description\\\"\\r\\n                    style=\\\"height: 115px\\\"></textarea>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"input-group\\\">\\r\\n              <span class=\\\"input-group-prepend\\\" title=\\\"Image Url\\\">\\r\\n                  <span class=\\\"input-group-text\\\">\\r\\n                      <i class=\\\"fa fa-image fa-fw\\\"></i>\\r\\n                  </span>\\r\\n              </span>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" id=\\\"ImageUrl\\\"\\r\\n                   required\\r\\n                   name=\\\"ImageUrl\\\"\\r\\n                   placeholder=\\\"Image Url\\\" [(ngModel)]=\\\"album.ImageUrl\\\" />\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"input-group\\\">\\r\\n              <span class=\\\"input-group-prepend\\\" title=\\\"Url where to buy\\\">\\r\\n                  <span class=\\\"input-group-text\\\">\\r\\n                      <i class=\\\"fa fa-dollar fa-fw\\\"></i>\\r\\n                  </span>\\r\\n              </span>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" id=\\\"AmazonUrl\\\"\\r\\n                   placeholder=\\\"Purchase Url\\\"\\r\\n                   name=\\\"AmazonUrl\\\"\\r\\n                   [(ngModel)]=\\\"album.AmazonUrl\\\"/>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\" title=\\\"Url where to buy\\\">\\r\\n                  <span class=\\\"input-group-text\\\">\\r\\n                      <i class=\\\"fa fa-spotify fa-fw\\\"></i>\\r\\n                  </span>\\r\\n              </div>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" id=\\\"SpotifyUrl\\\"\\r\\n                   placeholder=\\\"Listen Url\\\"\\r\\n                   name=\\\"SpotifyUrl\\\"\\r\\n                   [(ngModel)]=\\\"album.SpotifyUrl\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"YearReleased\\\">Year released:</label>\\r\\n          <input type=\\\"number\\\" class=\\\"form-control input-sm\\\" id=\\\"YearReleased\\\"\\r\\n                 required\\r\\n                 name=\\\"Year\\\"\\r\\n                 placeholder=\\\"Year of album release\\\"\\r\\n                 [(ngModel)]=\\\"album.Year\\\"/>\\r\\n        </div>\\r\\n\\r\\n        <hr/>\\r\\n\\r\\n        <album-songlist [tracks]=\\\"album.Tracks\\\" [allowEditing]=\\\"true\\\"></album-songlist>\\r\\n\\r\\n        <div class=\\\"well well-sm\\\">\\r\\n          <button type=\\\"submit\\\" (click)=\\\"saveAlbum(album)\\\"\\r\\n                  class=\\\"btn btn-success\\\"\\r\\n                  [disabled]=\\\"form1.invalid\\\" accesskey=\\\"S\\\">\\r\\n            <i class=\\\"fa fa-check\\\"></i> Save\\r\\n          </button>\\r\\n          <a [routerLink]=\\\"['/album',album.Id]\\\" class=\\\"btn btn-default\\\">\\r\\n            <i class=\\\"fa fa-remove\\\"></i> Cancel\\r\\n          </a>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"separator\\\"></div>\\r\\n\\r\\n      </form>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-sm-7\\\">\\r\\n      <h3>Preview</h3>\\r\\n      <img [src]=\\\"album.ImageUrl\\\" onerror=\\\"this.src=''\\\" class=\\\"album-image-big\\\"/>\\r\\n      <div style=\\\"margin-top: 10px;\\\">\\r\\n        <h2 class=\\\"album-title-big\\\">{{album.Title}}</h2>\\r\\n        <div class=\\\"album-artist\\\">by {{album.Artist.ArtistName}} {{(album.Year ? 'in ' + album.Year : '')}}\\r\\n          - <a [href]=\\\"album.AmazonUrl\\\" *ngIf=\\\"album.AmazonUrl\\\"><i class=\\\"fa fa-dollar\\\"></i> Buy on Amazon</a>\\r\\n        </div>\\r\\n        <div class=\\\"album-descript line-breaks\\\" [innerHTML]=\\\"album.Description\\\"></div>\\r\\n\\r\\n        <hr/>\\r\\n\\r\\n        <album-songlist [tracks]=\\\"album.Tracks\\\"></album-songlist>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"","import {Component, OnInit, ElementRef} from '@angular/core';\r\nimport {Album} from \"../business/entities\";\r\nimport {AlbumService} from \"./albumService\";\r\nimport {Router, ActivatedRoute} from \"@angular/router\";\r\nimport {ErrorInfo} from \"../common/errorDisplay\";\r\nimport {AppConfiguration} from \"../business/appConfiguration\";\r\nimport { UserInfo } from \"../business/userInfo\";\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, switchMap, catchError  } from 'rxjs/operators';\r\n\r\n//declare var $:any ;\r\ndeclare var $:any;\r\ndeclare var toastr:any;\r\ndeclare var window:any;\r\n\r\nimport { slideInLeft, slideIn } from \"../common/animations\";\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'album-editor',\r\n    templateUrl: 'albumEditor.html',\r\n    animations: [ slideIn ]\r\n})\r\nexport class AlbumEditor implements OnInit {\r\n  constructor(private route: ActivatedRoute,\r\n              private router: Router,\r\n              private albumService: AlbumService,\r\n              private config:AppConfiguration,\r\n              private user: UserInfo,\r\n         ) {  }\r\n\r\n  album: Album = new Album();\r\n  error: ErrorInfo = new ErrorInfo();\r\n  loaded =  false;\r\n  aniFrame = 'in';\r\n  public searchData: any  = {};\r\n\r\n\r\n\r\n  ngOnInit() {\r\n    if (!this.user.isAuthenticated) {\r\n      this.router.navigate(['/login']);\r\n      return;\r\n    }\r\n\r\n    this.config.isSearchAllowed = false;\r\n    \r\n    var id = this.route.snapshot.params[\"id\"];\r\n    if (id < 1) {\r\n        this.loaded = true;\r\n        this.album = this.albumService.newAlbum();\r\n        return;\r\n    }\r\n\r\n   \r\n\r\n    this.albumService.getAlbum(id)\r\n      .subscribe(result => {\r\n          this.album = result;\r\n          this.loaded = true;\r\n        },\r\n        err => {\r\n          this.error.error(err);\r\n        });\r\n  }\r\n\r\n  \r\n  saveAlbum(album) {\r\n    return this.albumService.saveAlbum(album)\r\n      .subscribe((album: Album) => {\r\n          var msg = album.Title + \" has been saved.\";\r\n          this.error.info(msg);\r\n          toastr.success(msg);\r\n          window.document.getElementById(\"MainView\").scrollTop = 0;\r\n\r\n          setTimeout(()=> {\r\n            this.router.navigate([\"/album\", album.Id]);\r\n          }, 1500)\r\n        },\r\n        err => {\r\n          let msg = `Unable to save album: ${err.message}`;\r\n          this.error.error(msg);\r\n          toastr.error(msg);\r\n\r\n          if (err.response && err.response.status == 401) {\r\n            this.user.isAuthenticated = false;\r\n            this.router.navigate([\"/login\"]);\r\n          }\r\n        });\r\n    };\r\n\r\n  \r\n    /**\r\n     * Returns a list of Artist Lookup items and pipes them \r\n     * into the look up list. Result format is:\r\n     * [ {name: \"band\", id: \"band\"}]\r\n     * \r\n     * Called from ngb-TypeAhead with the search term observable\r\n     */\r\n    search = (text$: Observable<string>) => {\r\n      return text$.pipe(      \r\n          debounceTime(200), \r\n          distinctUntilChanged(),\r\n          // switchMap allows returning an observable rather than maps array\r\n          switchMap( (searchText) =>  this.albumService.artistLookup(searchText) ),\r\n          catchError(new ErrorInfo().parseObservableResponseError)              \r\n      );                 \r\n    }\r\n\r\n    /**\r\n     * Used to format the result data from the lookup into the\r\n     * display and list values\r\n     * @param value For\r\n     */\r\n    resultFormatBandListValue(value: any) {            \r\n      return value.name;\r\n    } \r\n    inputFormatBandListValue(value: any)   {\r\n      if(value.name)\r\n        return value.name\r\n      return value;\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"container container-fluid slide-animation\\\" [@slideIn]=\\\"'in'\\\">\\r\\n\\r\\n    <error-display [error]=\\\"error\\\"></error-display>\\r\\n\\r\\n    <a routerLink=\\\"/album/edit/0\\\" class=\\\"btn btn-sm btn-success pull-right\\\" (sclick)=\\\"addAlbum()\\\"><i class=\\\"fa fa-plus\\\"></i> Add Album</a>\\r\\n    <div class=\\\"page-header-text\\\">\\r\\n        <i class=\\\"fa fa-list\\\">\\r\\n        </i> Albums <span class=\\\"badge badge-danger badge-small\\\">{{filteredAlbumList.length}}</span>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"container\\\" *ngIf=\\\"busy\\\">\\r\\n        <i class=\\\"fa fa-circle-o-notch fa-spin fa-5x\\\"\\r\\n           style=\\\"display: block; text-align: center; margin-top: 70px;\\\"></i>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <a class=\\\"album\\\" role=\\\"button\\\" style=\\\"text-decoration: none; color: inherit\\\"\\r\\n         *ngFor=\\\"let album of filteredAlbumList\\\"\\r\\n         (click)=\\\"albumClick(album)\\\" >\\r\\n\\r\\n        <div class=\\\"album-overlay\\\">\\r\\n            <a routerLink=\\\"['/album/edit',{{album.Id}}]\\\">\\r\\n              <i class=\\\"fa fa-edit\\\" title=\\\"Edit\\\"></i>\\r\\n            </a>\\r\\n            &nbsp;\\r\\n            <a (click)=\\\"deleteAlbum(album)\\\">\\r\\n              <i class=\\\"fa fa-remove\\\" title=\\\"Delete\\\"></i>\\r\\n            </a>\\r\\n        </div>\\r\\n\\r\\n        <div>\\r\\n            <img [src]=\\\"album.ImageUrl\\\" class=\\\"album-image\\\" />\\r\\n            <div style=\\\"padding-left: 80px;\\\">\\r\\n                <div class=\\\"album-title\\\">{{album.Title}}</div>\\r\\n                <div class=\\\"album-artist\\\">by <b>{{album.Artist.ArtistName}}</b> {{(album.Year ? 'in ' + album.Year : '')}}</div>\\r\\n                <div class=\\\"album-descript\\\">{{album.Description}}</div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </a>\\r\\n</div>\\r\\n\"","﻿import {Component, OnInit } from '@angular/core';\r\nimport { AlbumService } from './albumService';\r\nimport { Album } from '../business/entities';\r\n\r\nimport {AppConfiguration} from \"../business/appConfiguration\";\r\nimport {Router} from \"@angular/router\";\r\nimport {ErrorInfo} from \"../common/errorDisplay\";\r\nimport {slideIn, slideInLeft} from \"../common/animations\";\r\nimport { UserInfo } from \"../business/userInfo\";\r\n\r\ndeclare var $:any;\r\ndeclare var toastr:any;\r\n\r\n\r\n@Component({\r\n  selector: 'album-list',\r\n  templateUrl: './albumList.html',\r\n  animations: [ slideIn ]\r\n})\r\nexport class AlbumList implements OnInit {\r\n\r\n  constructor(private router:Router,\r\n              private albumService: AlbumService,\r\n              private config: AppConfiguration) {\r\n  }\r\n\r\n  albumList: Album[] = [];\r\n  busy: boolean = true;\r\n  error:ErrorInfo = new ErrorInfo();\r\n\r\n\r\n  ngOnInit() {\r\n    this.getAlbums();\r\n\r\n    this.config.isSearchAllowed = true;\r\n    this.config.activeTab = \"albums\";\r\n    this.config.searchText = \"\";\r\n\r\n    // ??? Non-DOM way to do this?\r\n    setTimeout(() => {        \r\n      $(\"#SearchBox\").focus();\r\n    },200);\r\n  }\r\n\r\n  get filteredAlbumList() {\r\n    if (this.config.searchText && this.config.searchText.length > 1) {\r\n      var lsearchText = this.config.searchText.toLowerCase();\r\n      return this.albumList.filter((a) =>\r\n        a.Title.toLowerCase().includes(lsearchText) ||\r\n        a.Artist.ArtistName.toLowerCase().includes(lsearchText)\r\n      );\r\n    }\r\n    return this.albumList;\r\n  }\r\n\r\n  getAlbums() {\r\n    this.busy = true;\r\n    this.albumList = [];\r\n    this.albumService.getAlbums()\r\n      .subscribe(albums => {\r\n        this.albumList = albums;\r\n        this.busy = false;\r\n\r\n        // reset scroll position of the list\r\n        setTimeout(()=> $(\"#MainView\").scrollTop(this.albumService.listScrollPos), 100);\r\n      }, err => {\r\n        if (!err.message)\r\n          this.error.error(\"Unable to load albums right now. Most likely the server is not responding.\");\r\n        else\r\n          this.error.error(err);\r\n        this.busy = false;\r\n      });\r\n  }\r\n\r\n  albumClick(album: Album) {\r\n    this.albumService.listScrollPos = $(\"#MainView\").scrollTop();\r\n    this.router.navigate(['/album', album.Id]);\r\n  }\r\n\r\n\r\n  addAlbum() {\r\n\r\n  }\r\n\r\n  deleteAlbum(album: Album) {\r\n\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Album, Artist, Track} from '../business/entities';\r\nimport {AppConfiguration} from \"../business/appConfiguration\";\r\nimport {ErrorInfo} from \"../common/errorDisplay\";\r\nimport {Observable} from \"rxjs\";\r\nimport {map, catchError} from \"rxjs/operators\";\r\n\r\nimport {HttpClient} from \"@angular/common/http\";\r\n\r\n\r\n// import 'rxjs/Operator/map';\r\n// import 'rxjs/add/operator/catch';\r\n// import 'rxjs/add/observable/throw';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AlbumService {\r\n    constructor( private httpClient: HttpClient,\r\n                 private config: AppConfiguration) {\r\n    }\r\n\r\n    albumList: Album[] = [];\r\n    album: Album = new Album();\r\n\r\n    //artistList: Artist[] = [];\r\n    listScrollPos = 0;\r\n\r\n    getAlbums(): Observable<any> {\r\n        return this.httpClient.get<Album[]>(this.config.urls.url(\"albums\"))\r\n                    .pipe(\r\n                        map(albumList => this.albumList = albumList),\r\n                        catchError( new ErrorInfo().parseObservableResponseError)\r\n                    );\r\n                    \r\n    }\r\n\r\n    getAlbum(id): Observable<Album> {\r\n        return this.httpClient.get<Album>(this.config.urls.url(\"album\", id))\r\n            .pipe(\r\n                map(album => {\r\n                    this.album = album;\r\n\r\n                    if (!this.albumList || this.albumList.length < 1)\r\n                        this.getAlbums(); // load up albums in background\r\n\r\n                    return this.album;\r\n                }),\r\n                catchError(new ErrorInfo().parseObservableResponseError)\r\n            );\r\n    }\r\n\r\n    newAlbum(): Album {\r\n        this.album = new Album();\r\n        return this.album;\r\n    }\r\n\r\n    saveAlbum(album): Observable<any> {\r\n        return this.httpClient.post<Album>(this.config.urls.url(\"album\"),\r\n            album)\r\n            .pipe(map(album => {\r\n                this.album = album;\r\n\r\n                // explicitly update the list with the updated data\r\n                this.updateAlbum(this.album);\r\n                return this.album;\r\n            }),\r\n            catchError(new ErrorInfo().parseObservableResponseError)\r\n        );\r\n    }\r\n\r\n    deleteAlbum(album: Album): Observable<any> {\r\n        return this.httpClient.delete<boolean>(this.config.urls.url(\"album\", album.Id))\r\n            .pipe(\r\n                map(result => {\r\n                    if (result)\r\n                        this.removeAlbum(album); // client side remove\r\n                }),\r\n                catchError(new ErrorInfo().parsePromiseResponseError)\r\n            );\r\n    }\r\n\r\n\r\n    /**\r\n     * Updates the .albumList property by updating the actual\r\n     * index entry in the existing list, adding new entries and\r\n     * removing 0 entries.\r\n     * @param album  - the album to update\r\n     */\r\n    updateAlbum(album) {\r\n        var i = this.albumList.findIndex((a) => (a.Id == album.Id));\r\n        if (i > -1)\r\n            this.albumList[i] = album;\r\n        else {\r\n            this.albumList.push(album);\r\n            this.albumList.sort((a: Album, b: Album) => {\r\n                var aTitle = a.Title.toLocaleLowerCase();\r\n                var bTitle = b.Title.toLocaleLowerCase();\r\n                if (aTitle > bTitle)\r\n                    return 1;\r\n                if (aTitle < bTitle)\r\n                    return -1;\r\n                return 0;\r\n            })\r\n        }\r\n\r\n        this.albumList = this.albumList.filter((a) => a.Id != 0);\r\n    }\r\n\r\n    removeAlbum(album) {\r\n        this.albumList = this.albumList.filter((a) => a.Id != album.Id);\r\n    }\r\n\r\n    addSong(track: Track) {\r\n        this.album.Tracks.push(track);\r\n    }\r\n\r\n    removeSong(track: Track) {\r\n        var idx = this.album.Tracks.findIndex((t) => track.Id == t.Id);\r\n        if (idx > -1)\r\n            this.album.Tracks.splice(idx, 1);\r\n    }\r\n\r\n    artistLookup(searchTerm: String):Observable<any> {\r\n        let url = this.config.urls.url(\"artistLookup\") + searchTerm;\r\n        return this.httpClient.get<any>( url).pipe(            \r\n            catchError(new ErrorInfo().parseObservableResponseError)              \r\n        );\r\n    }\r\n\r\n}\r\n","module.exports = \"<div *ngIf=\\\"allowEditing\\\">\\r\\n  <button (click)=\\\"addTrack(track)\\\" accesskey=\\\"a\\\"\\r\\n          *ngIf=\\\"!isSongVisible\\\" title=\\\"Add Song (alt-a)\\\"\\r\\n          class=\\\"btn btn-info btn-xs\\\" style=\\\"margin-bottom: 10px;\\\">\\r\\n    <i class=\\\"fa fa-plus-circle\\\"></i> Add Song\\r\\n  </button>\\r\\n\\r\\n  <div *ngIf=\\\"isSongVisible\\\" class=\\\"well well-sm\\\">\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\" col-sm-9\\\">\\r\\n        <input class=\\\"form-control input-sm\\\" id=\\\"songSongName\\\"\\r\\n               placeholder=\\\"Name of the song\\\"\\r\\n               name=\\\"songSongName\\\"\\r\\n               [(ngModel)]=\\\"track.SongName\\\"/>\\r\\n\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-3\\\">\\r\\n        <input class=\\\"form-control input-sm\\\" id=\\\"Length\\\"\\r\\n               name=\\\"Length\\\"\\r\\n               [(ngModel)]=\\\"track.Length\\\"\\r\\n               placeholder=\\\"0:00\\\"/>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <button class=\\\"btn btn-success btn-xs\\\"\\r\\n            (click)=\\\"saveTrack(track)\\\"\\r\\n            [disabled]=\\\"!track.SongName\\\"\\r\\n            style=\\\"margin-top: 8px;\\\" accesskey=\\\"\\\">\\r\\n      <i class=\\\"fa fa-plus-circle\\\"></i> Save Track\\r\\n    </button>\\r\\n    <button class=\\\"btn btn-default btn-xs\\\"\\r\\n            (click)=\\\"cancelTrack()\\\"\\r\\n            style=\\\"margin-top: 8px;\\\">\\r\\n      <i class=\\\"fa fa-times\\\"></i> Cancel\\r\\n    </button>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<style>\\r\\n    @media(max-width: 700px) {\\r\\n        #TrackTable td i.fa { display: none; }\\r\\n    }\\r\\n</style>\\r\\n<table id=\\\"TrackTable\\\" class=\\\"table table-striped table-sm\\\">\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let track of tracks\\\">            \\r\\n            <td><i class=\\\"fa fa-music text-primary\\\"></i>\\r\\n                {{track.SongName}}</td>\\r\\n            <td>{{track.Length}}</td>\\r\\n            <td>\\r\\n                <button *ngIf=\\\"allowEditing\\\" (click)=\\\"removeTrack(track)\\\"\\r\\n                        class=\\\"btn btn-sm btn-danger\\\">\\r\\n                    <i class=\\\"fa fa-remove\\\"></i> Remove\\r\\n                </button>\\r\\n            </td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n\"","import {Component, OnInit, Input} from '@angular/core';\r\nimport {Track} from \"../business/entities\";\r\nimport {AlbumService} from \"./albumService\";\r\n\r\n@Component({\r\n    //moduleId: module.id,\r\n    selector: 'album-songlist',\r\n    templateUrl: 'albumSongList.html'\r\n})\r\nexport class AlbumSongList implements OnInit {\r\n  constructor(private albumService:AlbumService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  @Input() tracks: Track[] = [];\r\n  @Input() allowEditing: boolean = false;\r\n  isSongVisible = false;\r\n  track:Track = new Track();\r\n\r\n  addTrack(track){\r\n      this.track = new Track();\r\n      this.isSongVisible = true;\r\n  }\r\n  cancelTrack() {\r\n      this.track = new Track();\r\n      this.isSongVisible = false;\r\n  }\r\n\r\n  saveTrack(track){\r\n      this.albumService.addSong(track);\r\n      this.isSongVisible = false;\r\n  }\r\n\r\n  removeTrack(track: Track) {\r\n      this.albumService.removeSong(track);\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AlbumList } from './albums/albumList';\r\nimport { AlbumDisplay} from './albums/albumDisplay';\r\nimport {AlbumEditor } from './albums/albumEditor';\r\nimport { ArtistList } from './artists/artistList';\r\nimport { ArtistDisplay} from \"./artists/artistDisplay\";\r\nimport {OptionsComponent} from \"./options/options\";\r\nimport {LoginComponent} from \"./common/login\";\r\nimport {AboutComponent} from \"./options/about\";\r\n\r\nconst routes: Routes = [\r\n\t{path: '', redirectTo: 'albums', pathMatch: 'full'},\r\n\t{path: 'albums', component: AlbumList },\r\n\t{path: 'album/:id', component: AlbumDisplay },\r\n\t{path: 'album/edit/:id', component: AlbumEditor },\r\n\t{path: 'artists', component: ArtistList },\r\n\t{path: 'artist/:id', component: ArtistDisplay },\r\n\t{path: 'options', component: OptionsComponent },\r\n\t{ path: 'login', component: LoginComponent },\r\n\t{ path: 'logout', component: LoginComponent },\r\n\t{ path: 'about', component: AboutComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n  providers: []\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-header></app-header>\\r\\n\\r\\n<div style=\\\" padding: 1px;\\\">\\r\\n\\r\\n        <div id=\\\"MainView\\\" >\\r\\n            <router-outlet autoscroll=\\\"true\\\"></router-outlet>\\r\\n        </div>\\r\\n        <app-footer></app-footer>\\r\\n\\r\\n</div>\\r\\n\\r\\n<body>\\r\\n</body>\\r\\n\\r\\n<footer>\\r\\n  <hr/>\\r\\n  &copy West Wind Technologies\\r\\n</footer>\\r\\n\"","import {Component} from '@angular/core';\r\nimport {UserInfo} from \"./business/userInfo\";\r\n\r\ndeclare var toastr:any;\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n    title = 'Test Application';\r\n\r\n    constructor(private user: UserInfo) {\r\n        // check authentication when the page is loaded\r\n        // fire and forget - service updates the auth\r\n        // status model\r\n        this.user.checkAuthentication()\r\n            .subscribe();\r\n\r\n        // re-check infrequently - once every 2 minutes\r\n        setInterval( ()=> {\r\n            var previousStatus = user.isAuthenticated;\r\n            this.user.checkAuthentication()\r\n                .subscribe((isAuthenticated)=> {\r\n                    if (!isAuthenticated && previousStatus)\r\n                        toastr.warning(\"Your session has expired. Please log in again.\");\r\n                });\r\n        },120000)\r\n    }\r\n}\r\n","import {NgModule, Injectable} from '@angular/core'\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport {AppComponent} from \"./app.component\";\r\n\r\nimport {FormsModule} from '@angular/forms';\r\nimport {BrowserModule} from '@angular/platform-browser';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {HttpModule} from '@angular/http';  // legacy\r\nimport {HttpClientModule, HTTP_INTERCEPTORS} from '@angular/common/http';   // use this\r\n\r\n\r\n// components\r\nimport {AppHeader} from './common/appHeader';\r\nimport {AppFooter} from \"./common/appFooter\";\r\n\r\nimport {AlbumList} from './albums/albumList';\r\nimport {AlbumDisplay} from './albums/albumDisplay';\r\nimport {AlbumEditor} from './albums/albumEditor';\r\nimport {ArtistList} from './artists/artistList';\r\nimport {ArtistDisplay} from './artists/artistDisplay';\r\n\r\n// services\r\nimport {Album, Artist, Track} from './business/entities';\r\nimport {AlbumService} from './albums/albumService';\r\nimport {ArtistService} from './artists/artistService';\r\nimport {AppConfiguration} from './business/appConfiguration';\r\nimport {UserInfo} from \"./business/userInfo\";\r\n\r\nimport {LocationStrategy, HashLocationStrategy} from '@angular/common';\r\nimport {AlbumSongList} from \"./albums/albumSongList\";\r\n\r\n// directives and shared components\r\nimport {ErrorDisplay, ErrorInfo} from './common/errorDisplay';\r\nimport {ArtistEditor} from \"./artists/artistEditor\";\r\nimport {LoginComponent} from './common/login';\r\n\r\nimport {AboutComponent} from './options/about';\r\nimport { OptionsComponent } from './options/options';\r\n\r\n/* Custom Components or overrides */\r\nimport {HttpRequestInterceptor} from './business/httpRequestInterceptor'\r\nimport { FocusDirective } from './common/focusDirective';\r\n\r\n\r\nimport { NgbTypeaheadModule, NgbModalModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n\r\n//declare var $:any;\r\n//declare var toastr:any;\r\n\r\n// Enable production mode\r\n// import { enableProdMode } from '@angular/core';\r\n// enableProdMode();\r\n\r\n@NgModule({\r\n    imports: [\r\n        BrowserModule,\r\n        BrowserAnimationsModule,\r\n        FormsModule,\r\n        HttpModule,\r\n        HttpClientModule,\r\n        AppRoutingModule,\r\n        \r\n        // ng-bootstrap\r\n        //NgbModule\r\n        NgbTypeaheadModule, NgbModalModule\r\n    ],\r\n\r\n    // components\r\n    declarations: [\r\n        AppComponent,\r\n        AppHeader,\r\n        AppFooter,\r\n\r\n        OptionsComponent,\r\n        AboutComponent,\r\n        AlbumList,\r\n        AlbumDisplay,\r\n        AlbumEditor,\r\n        AlbumSongList,\r\n        ArtistList,\r\n        ArtistDisplay,\r\n        ArtistEditor,\r\n        ErrorDisplay,        \r\n        LoginComponent,\r\n        \r\n        FocusDirective\r\n    ],\r\n    // services, pipes and providers\r\n    providers: [            \r\n        //Album, Artist, Track\r\n\r\n        // make sure you use this for Hash Urls rather than HTML 5 routing\r\n        //{ provide: LocationStrategy, useClass: HashLocationStrategy },\r\n\r\n        // {\r\n        //   provide: XHRBackend,\r\n        //   useFactory: (xhr, opts, strategy, user) => {\r\n        //     return new CoreXHRBackend(xhr, opts, strategy, user);\r\n        //   },\r\n        //   deps: [BrowserXhr, ResponseOptions, XSRFStrategy, UserInfo],\r\n        // }\r\n\r\n        // Http Interceptor(s) - this one adds with Client Credentials\r\n        [\r\n            { provide: HTTP_INTERCEPTORS, useClass: HttpRequestInterceptor, multi: true }\r\n        ],\r\n    ],\r\n\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n\r\n}\r\n","module.exports = \"<div  class=\\\"container\\\" [@slideIn]=\\\"'in'\\\">\\r\\n\\r\\n  <div class=\\\"btn-group margin-bottom\\\" role=\\\"group\\\" >\\r\\n    <a routerLink=\\\"/artists\\\" class=\\\"btn btn-sm btn-primary\\\">\\r\\n      <i class=\\\"fa fa-list\\\"></i>\\r\\n      Artists</a>\\r\\n\\r\\n    <button  (click)=\\\"openModalEditor(editor)\\\"\\r\\n       class=\\\"btn btn-sm btn-primary\\\">\\r\\n      <i class=\\\"fa fa-edit\\\"></i>\\r\\n      Edit\\r\\n    </button>\\r\\n\\r\\n    <button (click)=\\\"deleteArtist(ArtistEditor)\\\"\\r\\n            class=\\\"btn btn-sm btn-primary\\\">\\r\\n      <i class=\\\"fa fa-remove\\\"></i>\\r\\n      Delete\\r\\n    </button>\\r\\n  </div>\\r\\n\\r\\n  <error-display [error]=\\\"error\\\"></error-display>\\r\\n\\r\\n\\r\\n  <h2>{{artist.ArtistName}}</h2>\\r\\n\\r\\n  <div class=\\\"separator\\\"></div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-3\\\">\\r\\n      <img [src]=\\\"artist.ImageUrl\\\"\\r\\n           style=\\\"width: 97%; margin-bottom: 8px; border-radius: 4px; box-shadow: 2px 2px 4px #535353\\\" />\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-8\\\">\\r\\n      <div class=\\\"line-breaks\\\">{{artist.Description }}</div>\\r\\n\\r\\n      <a class=\\\"small\\\" *ngIf=\\\"artist.AmazonUrl\\\" href=\\\"{{artist.AmazonUrl}}\\\">{{artist.ArtistName}} on Amazon</a>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <h3>Albums</h3>\\r\\n  <div class=\\\"separator\\\"></div>\\r\\n\\r\\n  <div class=\\\"album\\\" *ngFor=\\\"let album of artist.Albums\\\" style=\\\"text-decorataion: none;\\\"\\r\\n       (click)=\\\"albumClick(album)\\\">\\r\\n    <div class=\\\"album-overlay\\\">\\r\\n      <a [routerLink]=\\\"['/album/edit',album.Id]\\\">\\r\\n        <i class=\\\"fa fa-edit\\\" title=\\\"Edit\\\"></i></a> &nbsp;\\r\\n      <a (click)=\\\"deleteAlbum(album)\\\">\\r\\n        <i class=\\\"fa fa-remove\\\" title=\\\"Delete\\\"></i></a>\\r\\n    </div>\\r\\n\\r\\n    <div>\\r\\n      <img [src]=\\\"album.ImageUrl\\\"  class=\\\"album-image\\\" *ngIf=\\\"album.ImageUrl\\\"  />\\r\\n      <div style=\\\"padding-left: 80px;\\\">\\r\\n        <div class=\\\"album-title\\\">{{album.Title}}</div>\\r\\n        <div class=\\\"album-artist\\\">\\r\\n          {{(album.Year ? 'in ' + album.Year : '')}}\\r\\n        </div>\\r\\n        <div class=\\\"album-descript\\\">{{album.Description}}</div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <a class=\\\"btn btn-sm btn-success\\\" routerLink=\\\"/album/edit/0\\\">\\r\\n    <i class=\\\"fa fa-plus\\\"></i>\\r\\n    Add Album\\r\\n  </a>\\r\\n\\r\\n\\r\\n\\r\\n</div>\\r\\n\\r\\n<!-- modal edit dialog -->\\r\\n<artist-editor #ArtistEditor  [artist]=\\\"artist\\\" ></artist-editor>\\r\\n\"","import { Component, OnInit, ViewChild} from '@angular/core';\r\nimport { ArtistService} from \"./artistService\";\r\nimport { Artist, Album} from \"../business/entities\";\r\nimport { AppConfiguration} from \"../business/appConfiguration\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\n\r\nimport {UserInfo} from \"../business/userInfo\";\r\nimport {ErrorInfo} from \"../common/errorDisplay\";\r\nimport { ArtistEditor } from \"./artistEditor\";\r\nimport {slideIn} from \"../common/animations\";\r\n\r\nimport {NgbModal, ModalDismissReasons} from '@ng-bootstrap/ng-bootstrap';\r\n\r\n\r\n\r\n@Component({\r\n    //moduleId: module.id,\r\n    selector: 'artist-display',\r\n    templateUrl: './artistDisplay.html',\r\n  animations: [ slideIn ]\r\n})\r\nexport class ArtistDisplay implements OnInit {\r\n  // reference a child editor component\r\n  @ViewChild(ArtistEditor) editor:ArtistEditor;\r\n\r\n  artist: Artist = new Artist();\r\n  albums: Album[] = [];\r\n  artistId = null;\r\n  formActive = true;\r\n\r\n  error:ErrorInfo = new ErrorInfo();\r\n\r\n  constructor(private route: ActivatedRoute,\r\n              private artistService: ArtistService,\r\n              private config: AppConfiguration,\r\n              private router: Router,\r\n              private user: UserInfo,\r\n              private modalService: NgbModal) {\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.config.isSearchAllowed = false;\r\n\r\n    var id = this.route.snapshot.params[\"id\"];\r\n    if (id < 1)\r\n      return;\r\n\r\n    this.artistService.getArtist(id)\r\n      .subscribe(\r\n          (result: any) => {\r\n          this.artist = result.Artist;\r\n          this.albums = result.Albums;\r\n        },\r\n        (err) => {\r\n          this.error.error(err);\r\n        });\r\n  }\r\n\r\n\r\n\r\n  albumClick(album) {\r\n    //window.location.hash = \"album/\" + album.Id;\r\n    this.router.navigate(['/album', album.Id]);\r\n  }\r\n\r\n  openModalEditor(artistEditor){\r\n    if (!this.user.isAuthenticated) {\r\n      this.router.navigate([\"/login\"]);\r\n      return;\r\n    }    \r\n\r\n    this.editor.open();  \r\n  }\r\n\r\n\r\n  addAlbum() {\r\n\r\n  }\r\n\r\n  deleteArtist(artist:Artist) {\r\n    this.artistService.deleteArtist(artist)\r\n      .subscribe((result) => {\r\n        this.error.info(\"Album deleted.\");\r\n        setTimeout(()=> {\r\n          this.router.navigate([\"/artists\"]);\r\n          this.artistService.artistList =\r\n              this.artistService.artistList.filter( art=> art.Id != artist.Id );\r\n        }, 1200);\r\n      }, (err)=> { console.log(err); this.error.error(err) });\r\n  }\r\n\r\n  deleteAlbum(album:Album) {\r\n    \r\n  }\r\n}\r\n","module.exports = \"<ng-template #ModalEditor let-modal>\\r\\n<form name=\\\"form1\\\"\\r\\n    action=\\\"javascript:{}\\\" novalidate\\r\\n    #form1=\\\"ngForm\\\">  \\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Edit Artist</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" \\r\\n            (click)=\\\"modal.dismiss('Cross click')\\\"  >\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n   \\r\\n      <div class=\\\"modal-body\\\">\\r\\n         <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"ArtistName\\\">Artist Name:</label>\\r\\n            <input name=\\\"ArtistName\\\" id=\\\"ArtistName\\\" type=\\\"text\\\"\\r\\n                   class=\\\"form-control input-sm\\\"\\r\\n                   [focus]=\\\"true\\\"\\r\\n                   placeholder=\\\"Artist Name\\\" required\\r\\n                   [(ngModel)]=\\\"artist.ArtistName\\\"  #ArtistName/>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"Description\\\">Bio:</label>\\r\\n            <textarea type=\\\"text\\\" class=\\\"form-control input-sm\\\"\\r\\n                      name=\\\"Description\\\" id=\\\"Description\\\"\\r\\n                      required\\r\\n                      style=\\\"height: 110px;\\\"\\r\\n                      minlength=\\\"20\\\"\\r\\n                      placeholder=\\\"Band Bio\\\" \\r\\n                      [(ngModel)]=\\\"artist.Description\\\"></textarea>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"ImageUrl\\\">Image Url:</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control input-sm\\\"\\r\\n                   id=\\\"ImageUrl\\\" name=\\\"ImageUrl\\\"\\r\\n                   placeholder=\\\"Image Url\\\" [(ngModel)]=\\\"artist.ImageUrl\\\" />\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"AmazonUrl\\\">Amazon Url:</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control input-sm\\\"\\r\\n                   name=\\\"AmazonUrl\\\" id=\\\"AmazonUrl\\\"\\r\\n                   placeholder=\\\"Link to Artist Amazon Page\\\" [(ngModel)]=\\\"artist.AmazonUrl\\\" />\\r\\n          </div>\\r\\n\\r\\n      </div>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"close()\\\">\\r\\n      <i class=\\\"fa fa-remove\\\"></i> Cancel</button>\\r\\n  \\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\r\\n                [disabled]=\\\"form1.pristine || form1.invalid\\\" accesskey=\\\"S\\\"\\r\\n                (click)=\\\"saveArtist(artist)\\\">\\r\\n          <i class=\\\"fa fa-check\\\"></i>\\r\\n          Save changes\\r\\n      </button>\\r\\n  </div>\\r\\n</form>\\r\\n</ng-template>\\r\\n\\r\\n\"","import {Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\r\nimport {ArtistService} from \"./artistService\";\r\nimport {Artist, Album} from \"../business/entities\";\r\n\r\nimport {ErrorInfo} from \"../common/errorDisplay\";\r\nimport {AppConfiguration} from \"../business/appConfiguration\";\r\nimport {UserInfo} from \"../business/userInfo\";\r\n\r\nimport {NgbModal, ModalDismissReasons} from '@ng-bootstrap/ng-bootstrap';\r\n\r\ndeclare var $: any;\r\n\r\n@Component({\r\n    //moduleId: module.id,\r\n    selector: 'artist-editor',\r\n    templateUrl: 'artistEditor.html'\r\n})\r\nexport class ArtistEditor implements OnInit {\r\n  @Input() artist: Artist = new Artist();\r\n  @ViewChild('ModalEditor') public  modalEditor; \r\n  @ViewChild('ArtistName') artistName:ElementRef;\r\n  \r\n  albums: Album[] = [];\r\n  formActive = false;\r\n  error: ErrorInfo = new ErrorInfo();\r\n\r\n  constructor(private artistService: ArtistService,\r\n              private config: AppConfiguration,\r\n              private user:UserInfo,\r\n              private modalService: NgbModal) {\r\n    console.log(\"ArtistEditor ctor\");\r\n\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.config.isSearchAllowed = false;\r\n  }\r\n\r\n  open() {\r\n    \r\n     this.modalService.open(this.modalEditor, {ariaLabelledBy: 'modal-basic-title'})\r\n          .result\r\n          .then((result) => { \r\n              \r\n              \r\n          }, (reason) => { });\r\n  }\r\n  close()  {\r\n    this.modalService.dismissAll();\r\n  }\r\n\r\n  saveArtist(artist) {\r\n    this.artistService.saveArtist(artist)\r\n      .subscribe( result => {\r\n        this.artist = result.Artist;\r\n        this.albums = result.Albums;\r\n\r\n        this.close();\r\n\r\n        this.formActive = false;\r\n        setTimeout(()=> {\r\n          this.formActive = true;\r\n        }, 0);\r\n\r\n        this.error.info(\"Artist has been saved\");        \r\n      },\r\n      err => {\r\n        this.error.error(err);\r\n\r\n        if (err.response && err.response.status == 401) {\r\n           window.location.hash=\"login\";\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n\r\n}\r\n","module.exports = \"<div class=\\\"container container-fluid\\\" [@slideInLeft]=\\\"'in'\\\" >\\r\\n\\r\\n  <error-display [error]=\\\"error\\\"></error-display>\\r\\n\\r\\n  <div class=\\\"list-group\\\">\\r\\n\\r\\n      <div class=\\\"page-header-text\\\">\\r\\n          <i class=\\\"fa fa-list\\\"></i> Artists\\r\\n          <div class=\\\"badge badge-danger badge-small\\\">{{artistList.length}}</div>\\r\\n      </div>\\r\\n\\r\\n      <a class=\\\"list-group-item list-group-item-action\\\"\\r\\n         *ngFor=\\\"let artist of filteredArtistList\\\"\\r\\n         (click)=\\\"artistClick(artist)\\\" role=\\\"button\\\">\\r\\n          <!-- <img [src]=\\\"artist.ImageUrl\\\" style=\\\"width: 40px; height: 40px; border-radius: 30px;\\\" /> -->\\r\\n          <i class=\\\"fa fa-users\\\" style=\\\"color: steelblue;\\\"></i> &nbsp;\\r\\n          <span class=\\\"badge badge-info badge-small\\\" style=\\\"font-size: 0.7em;\\\">{{artist.AlbumCount}}</span>\\r\\n          <span style=\\\"padding-left: 20px; font-size: 1.1em\\\">{{artist.ArtistName}}</span>\\r\\n      </a>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n  \"","﻿import {Component, OnInit} from '@angular/core';\r\nimport { Artist } from '../business/entities';\r\nimport {AppConfiguration} from \"../business/appConfiguration\";\r\nimport { ArtistService } from './artistService';\r\nimport {Router} from \"@angular/router\";\r\nimport {ErrorInfo} from \"../common/errorDisplay\";\r\n\r\nimport {slideIn, slideInLeft} from \"../common/animations\";\r\n\r\ndeclare var $:any;\r\n\r\n@Component({\r\n    selector: 'artist-list',\r\n    templateUrl: 'artistList.html',\r\n    animations: [ slideInLeft ]\r\n})\r\nexport class ArtistList implements OnInit {\r\n  constructor(private router:Router,\r\n              private artistService: ArtistService,\r\n              private config: AppConfiguration) {\r\n\r\n  }\r\n\r\n  artistList: Artist[] = [];\r\n  error:ErrorInfo = new ErrorInfo();\r\n\r\n  ngOnInit() {\r\n    this.getArtists();\r\n\r\n    this.config.searchText = \"\";\r\n    this.config.isSearchAllowed = true;\r\n    this.config.activeTab = \"artists\";\r\n\r\n    setTimeout(() => {\r\n      $(\"#SearchBox\").focus();\r\n    },200);\r\n  }\r\n\r\n  get filteredArtistList() {\r\n    if(this.config.searchText && this.config.searchText.length > 1) {\r\n      var lsearchText = this.config.searchText.toLowerCase();\r\n      return this.artistList.filter((a) =>\r\n        a.ArtistName.toLowerCase().includes(lsearchText)\r\n      );\r\n    }\r\n    return this.artistList;\r\n  }\r\n\r\n\r\n\r\n\r\n  getArtists() {\r\n    this.artistService.getArtists()\r\n      .subscribe( artists => {\r\n          this.artistList = artists;\r\n        \r\n          setTimeout(() => {\r\n            $(\"#MainView\").scrollTop(this.artistService.listScrollPos);\r\n            this.artistService.listScrollPos = 0;\r\n          }, 20);\r\n          return this.artistList;\r\n        },\r\n        err => {\r\n          if (!err.message)\r\n            this.error.error(\"Unable to load artists right now. Most likely the server is not responding.\");\r\n          else\r\n            this.error.error(err) \r\n          }\r\n      );\r\n  }\r\n\r\n  artistClick(artist:Artist) {\r\n    // Manual Navigation\r\n    this.router.navigate(['/artist', artist.Id]);\r\n    this.artistService.listScrollPos = $(\"#MainView\").scrollTop();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {Artist, Album, ArtistResult} from '../business/entities';\r\n\r\nimport {AppConfiguration} from \"../business/appConfiguration\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {ErrorInfo} from \"../common/errorDisplay\";\r\nimport {Observable, of} from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ArtistService {\r\n  constructor(private httpClient: HttpClient,\r\n              private config: AppConfiguration) {\r\n    console.log(\"ArtistService ctor\");\r\n  }\r\n\r\n  artistList: Artist[] = [];\r\n  artist: Artist = null;\r\n  albums: Album[] = [];\r\n  error:string  = \"\";\r\n\r\n  listScrollPos = 0;\r\n\r\n\r\n  getArtists(force: boolean = false): Observable<Artist[]> {\r\n\r\n    // use locally cached version\r\n    if (force !== true && (this.artistList && this.artistList.length > 0))\r\n      return of(this.artistList) as Observable<Artist[]>;\r\n\r\n    return this.httpClient.get<Artist[]>(this.config.urls.url(\"artists\"))\r\n      .pipe(map(artistList => {\r\n        this.artistList = artistList;\r\n        return this.artistList;\r\n      }),\r\n        catchError(new ErrorInfo().parseObservableResponseError)\r\n      );\r\n  }\r\n\r\n\r\n  getArtist(id): Observable<ArtistResult> {\r\n    return this.httpClient.get<any>(this.config.urls.url(\"artist\", id),\r\n      this.config.requestHeaders)\r\n      .pipe(map(artistResult => {\r\n        this.artist = artistResult.Artist;\r\n        this.artist.Albums = artistResult.Albums;\r\n        this.artist.AlbumCount = artistResult.Albums.length;\r\n\r\n        if (!this.artistList || this.artistList.length < 1)\r\n          this.getArtists();\r\n\r\n        return artistResult;\r\n      }),\r\n        catchError(new ErrorInfo().parseObservableResponseError)\r\n      );\r\n  }\r\n\r\n  saveArtist(artist): Observable<ArtistResult> {\r\n    return this.httpClient.post<ArtistResult>(this.config.urls.url(\"saveArtist\"), artist,\r\n      this.config.requestHeaders)\r\n      .pipe(map(artistResult => {\r\n\r\n        this.artist = artistResult.Artist;\r\n        this.artist.Albums = artistResult.Albums;\r\n        this.artist.AlbumCount = artistResult.Albums.length;\r\n\r\n        this.updateArtist(artistResult.Artist);\r\n\r\n        return artistResult;\r\n      }),\r\n        catchError(new ErrorInfo().parseObservableResponseError)\r\n      );\r\n  }\r\n\r\n  // Update the artistList with an artist\r\n  updateArtist(artist) {\r\n\r\n    var idx = this.artistList.findIndex( (art:Artist) => art.Id == artist.Id );\r\n\r\n    if (idx < 0)\r\n      this.artistList.push(artist);\r\n    else {\r\n      this.artistList[idx] = artist;\r\n    }\r\n  }\r\n\r\n  deleteArtist(artist:Artist):Observable<boolean> {\r\n    return this.httpClient.delete<boolean>(this.config.urls.url(\"artist\",artist.Id),\r\n                            this.config.requestHeaders)\r\n                            .pipe(catchError( new ErrorInfo().parseObservableResponseError) );\r\n  }\r\n}\r\n\r\n","﻿import { Injectable } from '@angular/core';\r\nimport {ApplicationStats} from \"./entities\";\r\nimport { HttpHeaders } from '@angular/common/http';\r\n\r\n\r\ndeclare var $:any;\r\ndeclare var toastr: any;\r\ndeclare var location: any;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppConfiguration {\r\n      constructor(){        \r\n          console.log(\"AppConfiguration ctor\");\r\n          this.setToastrOptions();\r\n          \r\n          if(location.port && (location.port == \"3000\") || (location.port== \"4200\") )\r\n            this.urls.baseUrl = \"http://localhost:5000/\"; // kestrel\r\n\r\n          //this.urls.baseUrl = \"http://localhost:5001/\"; // kestrel\r\n          //this.urls.baseUrl = \"http://localhost:26448/\"; // iis Express\r\n          //this.urls.baseUrl = \"http://localhost/albumviewer/\"; // iis          \r\n          //this.urls.baseUrl = \"https://albumviewer.west-wind.com/\";  // online          \r\n      }\r\n\r\n      // top level search text\r\n      searchText = \"\";\r\n      activeTab = \"albums\";\r\n      isSearchAllowed = true;\r\n      applicationStats:ApplicationStats = new ApplicationStats();\r\n\r\n      urls = {\r\n        baseUrl: \"./\",\r\n        //baseUrl: \"http://localhost/albumviewer/\",\r\n        //baseUrl: \"http://localhost:5000/\",\r\n        //baseUrl: \"https://albumviewer2swf.west-wind.com/\",\r\n        albums: \"api/albums\",\r\n        album: \"api/album\",\r\n        artists: \"api/artists\",\r\n        artist: \"api/artist\",\r\n        artistLookup: \"api/artistlookup?search=\",\r\n        saveArtist: \"api/artist\",\r\n        login: \"api/login\", //\"api/login\",\r\n        logout: \"api/logout\",\r\n        isAuthenticated: \"api/isAuthenticated\",\r\n        reloadData: \"api/reloadData\",\r\n        applicationStats: \"api/applicationstats\",\r\n        url: (name,parm1?,parm2?,parm3?) => {\r\n          var url = this.urls.baseUrl + this.urls[name];\r\n          if (parm1)\r\n            url += \"/\" + parm1;\r\n          if (parm2)\r\n            url += \"/\" + parm2;\r\n          if (parm3)\r\n            url += \"/\" + parm3;\r\n\r\n          return url;\r\n        }\r\n      };\r\n\r\n\r\n      setToastrOptions() {\r\n        toastr.options.closeButton = true;\r\n        toastr.options.positionClass = \"toast-bottom-right\";\r\n      }\r\n\r\n  /**\r\n   * Http Request options to for requests\r\n   * @type {RequestOptions}\r\n   */  \r\n  requestHeaders =  {\r\n    withCredentials: true,  \r\n  }\r\n}\r\n\r\n","import {Injectable, OnInit} from '@angular/core';\r\ndeclare var $:any;\r\n\r\n@Injectable()\r\nexport class Album {\r\n    Id:number = 0;\r\n    ArtistId:number = 0;\r\n    Title:string = null;\r\n    Description:string = null;\r\n    Year:number = 0;\r\n    ImageUrl:string = null;\r\n    AmazonUrl:string = null;\r\n    SpotifyUrl:string = null;\r\n\r\n    Artist:Artist = new Artist();\r\n    Tracks:Track[] = [];\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class Artist {\r\n    Id:number = 0;\r\n    ArtistName:string = null;\r\n    Description:string = null;\r\n    ImageUrl:string = null;\r\n    AmazonUrl:string = null;\r\n    AlbumCount:number = 0;\r\n    Albums:Album[] = [];\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ArtistResult {\r\n    Artist: Artist = null;\r\n    Albums: Album[] = [];\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class Track {\r\n    Id:number = 0;\r\n    AlbumId:number = 0;\r\n    SongName:string = null;\r\n    Length:string = null;\r\n    Bytes:number = 0;\r\n    UnitPrice:number = 0;\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ApplicationStats {\r\n    OsPlatform:string = null;\r\n    AngularVersion = \"Unknown\"; \r\n    AspDotnetVersion = \"Unknown\";\r\n    DataMode = \"Unknown\";\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpEvent, HttpInterceptor, HttpHandler, HttpRequest\r\n} from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\n/** Inject With Credentials into the request */\r\n@Injectable()\r\nexport class HttpRequestInterceptor implements HttpInterceptor {\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler):\r\n    Observable<HttpEvent<any>> {\r\n      console.log(\"interceptor: \" + req.url);\r\n      req = req.clone({\r\n        withCredentials: true\r\n      });\r\n      \r\n      return next.handle(req);\r\n  }\r\n}","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\r\nimport {AppConfiguration} from \"./appConfiguration\";\r\n\r\nimport { Observable, throwError } from 'rxjs';\r\nimport {map,catchError} from 'rxjs/operators';\r\n\r\n\r\nimport {ErrorInfo, ErrorDisplay} from \"../common/errorDisplay\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class UserInfo {\r\n\r\n    isAdmin = false;\r\n    userName: string = null;\r\n    sessionStarted = new Date();\r\n\r\n    private _isAuthenticated = false;\r\n    set isAuthenticated(val) {\r\n        this._isAuthenticated = val || false;\r\n        // cache authentication\r\n        localStorage.setItem('av_isAuthenticated', this._isAuthenticated.toString());\r\n    }\r\n\r\n    get isAuthenticated() {\r\n        return this._isAuthenticated;\r\n    };\r\n\r\n    constructor(private http: HttpClient,\r\n                private config: AppConfiguration) {\r\n        // initialize isAuthenticate from localstorage\r\n        let isAuthenticated = localStorage.getItem(\"av_isAuthenticated\");\r\n        this._isAuthenticated = !(!isAuthenticated || isAuthenticated === 'false');\r\n    }\r\n\r\n\r\n    login(username, password) {\r\n        return this.http.post(this.config.urls.url(\"login\"), {\r\n            username: username,\r\n            password: password\r\n        },this.config.requestHeaders)\r\n        .pipe(catchError((response) => {\r\n                if (response.status === 401)\r\n                    this.isAuthenticated = false;\r\n\r\n                return new ErrorInfo().parseObservableResponseError(response);\r\n            }));\r\n    }\r\n\r\n    logout() {\r\n        return this.http.get<boolean>(this.config.urls.url(\"logout\"))\r\n            .pipe(\r\n                map(\r\n                    (success) => {\r\n                        this.isAuthenticated = false;\r\n                        return true;\r\n                    }\r\n                ));\r\n    }\r\n\r\n    /**\r\n     * Calls to the server to check authentication and then\r\n     * updates the local isAuthenticated flag\r\n     * @returns {Observable<t>}\r\n     */\r\n    checkAuthentication() {\r\n        const url = this.config.urls.url(\"isAuthenticated\");\r\n        console.log(url);\r\n        return this.http.get<boolean>(url)\r\n            .pipe(\r\n                map((result) => {\r\n                    this.isAuthenticated = result;\r\n                    return result;\r\n                }),\r\n                catchError((response) => {                    \r\n                    this.isAuthenticated = false;                    \r\n                    var err = new ErrorInfo().parseObservableResponseError(response)\r\n                    return throwError(err);\r\n                })\r\n            );\r\n    }\r\n}\r\n","import { trigger, state, style, transition, animate } from '@angular/animations';\r\n\r\nexport const slideIn = trigger('slideIn', [\r\n  state('*', style({\r\n    transform: 'translateX(100%)',\r\n  })),\r\n  state('in', style({\r\n    transform: 'translateX(0)',\r\n  })),\r\n  state('out',   style({\r\n    transform: 'translateX(-100%)',\r\n  })),\r\n  transition('* => in', animate('400ms ease-in')),\r\n  transition('in => out', animate('400ms ease-out'))\r\n]);\r\n\r\nexport const slideInLeft = trigger('slideInLeft', [\r\n  state('*', style({\r\n    transform: 'translateX(-100%)',\r\n  })),\r\n  state('in', style({\r\n    transform: 'translateX(0)',\r\n  })),\r\n  state('out',   style({\r\n    transform: 'translateX(100%)',\r\n  })),\r\n  transition('* => in', animate('300ms ease-in')),\r\n  transition('in => out', animate('300ms ease-out'))\r\n]);\r\n","module.exports = \"<div class=\\\"banner banner-bottom\\\">\\r\\n  <nav id=\\\"Toolbar\\\">\\r\\n    <a routerLink=\\\"/albums\\\" [ngClass]=\\\"{ selected: config.activeTab == 'albums'}\\\" >\\r\\n      <img src=\\\"images/record.png\\\" title=\\\"Albums\\\" /> <span>Albums</span>\\r\\n    </a>\\r\\n    <a routerLink=\\\"/artists\\\" [ngClass]=\\\"{ selected: config.activeTab == 'artists'}\\\">\\r\\n      <img src=\\\"images/artists32.png\\\" title=\\\"Artists\\\" /> <span>Artists</span>\\r\\n    </a>\\r\\n    <a routerLink=\\\"/options\\\" [ngClass]=\\\"{ selected: config.activeTab == 'options'}\\\">\\r\\n      <img src=\\\"images/gear.png\\\" title=\\\"Options\\\" /> <span>Options</span>\\r\\n    </a>\\r\\n  </nav>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {AppConfiguration} from \"../business/appConfiguration\";\r\n\r\n@Component({\r\n    //moduleId: module.id,\r\n    selector: 'app-footer',\r\n    templateUrl: 'appFooter.html'\r\n})\r\nexport class AppFooter implements OnInit {\r\n    constructor(public config:AppConfiguration) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n    }\r\n\r\n}\r\n","module.exports = \"<div id=\\\"TitleBar\\\">\\r\\n    <a routerLink=\\\"/albums\\\">\\r\\n        <img src=\\\"images/headphone-head.png\\\" style=\\\"height: 47px; float: left\\\" />\\r\\n        <div style=\\\"float: left; margin-left: 5px; line-height: 1.2; \\\">\\r\\n            <i style=\\\"color: steelblue; font-size: 0.8em; font-weight: bold;\\\">West Wind</i><br />\\r\\n            <i style=\\\"color: whitesmoke; font-size: 1.25em; font-weight: bold;\\\">AlbumViewer</i>\\r\\n        </div>\\r\\n    </a>\\r\\n</div>\\r\\n\\r\\n    \\r\\n<div>\\r\\n    <div class=\\\"banner statusbar-push\\\">\\r\\n        <nav id=\\\"Toolbar-Top\\\" class=\\\"pull-right\\\">\\r\\n\\r\\n            <a routerLink=\\\"/albums\\\" [ngClass]=\\\"{ selected: config.activeTab == 'albums'}\\\">\\r\\n                <img src=\\\"images/record.png\\\" title=\\\"Albums\\\" />\\r\\n                <span>Albums</span>\\r\\n            </a>\\r\\n            <a routerLink=\\\"/artists\\\" [ngClass]=\\\"{ selected: config.activeTab == 'artists'}\\\">\\r\\n                <img src=\\\"images/artists32.png\\\" title=\\\"Artists\\\" />\\r\\n                <span>Artists</span>\\r\\n            </a>\\r\\n            <a routerLink=\\\"/options\\\" [ngClass]=\\\"{ selected: config.activeTab == 'options'}\\\">\\r\\n                <img src=\\\"images/gear.png\\\" title=\\\"Options\\\" />\\r\\n                <span>Options</span>\\r\\n            </a>\\r\\n        </nav>\\r\\n\\r\\n\\r\\n        <nav id=\\\"TopMenu\\\" class=\\\"pull-right\\\">\\r\\n            <form style=\\\"float: left; width: 140px; padding-top: 2px;\\\">\\r\\n                <input id=\\\"SearchBox\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\" name=\\\"searchText\\\"\\r\\n                    [(ngModel)]=\\\"config.searchText\\\" *ngIf=\\\"config.isSearchAllowed\\\">\\r\\n            </form>\\r\\n        </nav>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport {AppConfiguration} from \"../business/appConfiguration\";\r\n\r\n@Component({\r\n    //moduleId: module.id,\r\n    selector: 'app-header',\r\n    templateUrl: 'appHeader.html'\r\n})\r\nexport class AppHeader implements OnInit {\r\n    constructor(public config:AppConfiguration) {\r\n    }\r\n\r\n    ngOnInit() {\r\n     }\r\n\r\n}\r\n","\r\nimport {Injectable, Component, OnInit, Input} from '@angular/core';\r\nimport {Response} from \"@angular/http\";\r\nimport {Observable, throwError}  from 'rxjs';\r\n\r\n/**\r\n *   A Bootstrap based alert display\r\n */\r\n@Component({\r\n    //moduleId: module.id,\r\n    selector: 'error-display',\r\n    //templateUrl: 'errorDisplay.html'\r\n    template: `\r\n        <div *ngIf=\"error.message\"\r\n             class=\"alert alert-{{error.icon}} alert-dismissable\">\r\n            <button *ngIf=\"error.dismissable\" type=\"button\" class=\"close\"\r\n                    data-dismiss=\"alert\" aria-hidden=\"true\">\r\n                <i class=\"fa fa-remove\"></i>\r\n            </button>\r\n\r\n            <div *ngIf=\"error.header\" style=\"font-size: 1.5em; font-weight: bold\">\r\n                <i class=\"fa fa-{{error.imageIcon}}\" style=\"color: {{error.iconColor}}\"></i>\r\n                {{error.header}}\r\n            </div>\r\n            <i *ngIf=\"!error.header\"\r\n               class=\"fa fa-{{error.imageIcon}}\"\r\n               style=\"color: {{error.iconColor}}\"></i>\r\n\r\n            <strong>{{error.message}}</strong>\r\n        </div>\r\n    `\r\n})\r\n\r\nexport class ErrorDisplay implements OnInit {\r\n    constructor() {\r\n    }\r\n\r\n    /**\r\n     * Error object that is bound to the component.\r\n     * @type {ErrorInfo}\r\n     */\r\n    @Input() error: ErrorInfo = new ErrorInfo();\r\n\r\n    ngOnInit() {\r\n    }\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ErrorInfo {\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    message: string;\r\n    icon: string;\r\n    dismissable: boolean;\r\n    header: string;\r\n    imageIcon: string;\r\n    iconColor: string;\r\n\r\n    response: Response = null;\r\n\r\n    reset() {\r\n        this.message = \"\";\r\n        this.header = \"\";\r\n        this.dismissable = false;\r\n        this.icon = \"warning\";\r\n        this.imageIcon = \"warning\";\r\n        this.iconColor = \"inherit\";\r\n    }\r\n\r\n    /**\r\n     * Low level method to set message properties\r\n     * @param msg - the message to set to\r\n     * @param icon? - sets the icon property (warning*)\r\n     * @param iconColor? - sets the icon color (left as is)\r\n     */\r\n    show(msg: string, icon?: string, iconColor?: string) {\r\n        this.message = msg;\r\n        this.icon = icon ? icon : \"warning\";\r\n        if (iconColor)\r\n            this.iconColor = iconColor;\r\n\r\n        this.fixupIcons();\r\n\r\n\r\n        // if(this.icon == \"warning\")\r\n        //   toastr.warning(this.message);\r\n        // if(this.icon == \"info\")\r\n        //   toastr.info(this.message);\r\n        // if (this.icon == \"success\")\r\n        //   toastr.success(this.message);\r\n    }\r\n\r\n    /**\r\n     * Displays an error alert\r\n     * @param msg  - Either a message string or error object with .message property\r\n     */\r\n    error(msg) {\r\n        if (typeof(msg) === 'object' && msg.message)\r\n            this.message = msg.message;\r\n        else\r\n            this.message = msg;\r\n\r\n        this.show(this.message, \"warning\");\r\n    }\r\n\r\n    /**\r\n     * DIsplays an info style alert\r\n     * @param msg - message to display\r\n     */\r\n    info(msg) {\r\n        this.show(msg, \"info\");\r\n    }\r\n\r\n    /**\r\n     * Fixes up icons and colors based on standard icon settings\r\n     * this method is called in internally after any of the helper\r\n     * methods are called. You can call this when setting any icon\r\n     * related properties manually.\r\n     */\r\n    fixupIcons() {\r\n        var err = this;\r\n\r\n        if (err.icon === \"info\")\r\n            err.imageIcon = \"info-circle\";\r\n        if (err.icon === \"error\" || err.icon === \"danger\" || err.icon === \"warning\") {\r\n            err.imageIcon = \"warning\";\r\n            err.iconColor = \"firebrick\";\r\n        }\r\n        if (err.icon === \"success\") {\r\n            err.imageIcon = \"check\";\r\n            err.iconColor = \"green\";\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Parse a toPromise() .catch() clause error\r\n     * from a response object and returns an errorInfo object\r\n     * @param response\r\n     * @returns {Promise<void>|Promise<T>}\r\n     */\r\n    parsePromiseResponseError(response) {\r\n\r\n        if (response.hasOwnProperty(\"message\"))\r\n            return Promise.reject(response);\r\n        if (response.hasOwnProperty(\"Message\")) {\r\n            response.message = response.Message;\r\n            return Promise.reject(response);\r\n        }\r\n\r\n        let err = new ErrorInfo();\r\n        err.response = response;\r\n        err.message = response.statusText;\r\n\r\n        try {\r\n            let data = response.json();\r\n            if (data && data.message)\r\n                err.message = data.message;\r\n        }\r\n        catch (ex) {\r\n\r\n        }\r\n\r\n        return Promise.reject(err);\r\n    }\r\n\r\n    parseObservableResponseError(response): Observable<any> {\r\n        let err = new ErrorInfo();\r\n\r\n        // HttpClient has an `error` property for raw JSON response\r\n        if (response.hasOwnProperty(\"error\")) {\r\n\r\n            try {\r\n                err = JSON.parse(response.error);\r\n            } catch(ex) { }\r\n\r\n            if(err.hasOwnProperty(\"message\"))\r\n                return throwError(err);\r\n            if (err.hasOwnProperty(\"Message\"))\r\n            {\r\n                err.message = err[\"Message\"];\r\n                return throwError(err);\r\n            }\r\n        }\r\n        if (response.hasOwnProperty(\"message\"))\r\n            return Observable.throw(response);\r\n        if (response.hasOwnProperty(\"Message\")) {\r\n            response.message = response.Message;\r\n            return throwError(response);\r\n        }\r\n\r\n        err.response = response;\r\n        err.message = response.statusText;\r\n\r\n        try {\r\n            let data = response.json();\r\n            if (data && data.message)\r\n                err.message = data.message;\r\n        }\r\n        catch (ex) {\r\n        }\r\n\r\n        if (!err.message)\r\n            err.message = \"Unknown server failure.\";\r\n\r\n        return throwError(err);        \r\n    }\r\n}\r\n","import { Directive, Input, ElementRef } from '@angular/core';\r\n\r\n@Directive({\r\n\tselector : '[focus]'\r\n})\r\nexport class FocusDirective {\r\n\t@Input() focus : boolean;\r\n\r\n\tconstructor(private element : ElementRef) {\r\n\t}\r\n\t\r\n\tprotected ngOnChanges() {\r\n\t\tif (this.focus)\r\n\t\t\tthis.element.nativeElement.focus();\r\n\t}\r\n}","module.exports = \"<div class=\\\"container\\\">\\r\\n\\r\\n  <div class=\\\"page-header-text\\\">\\r\\n    AlbumViewer Login\\r\\n  </div>\\r\\n\\r\\n  <error-display [error]=\\\"error\\\"></error-display>\\r\\n\\r\\n  <div id=\\\"WebLogin\\\" class=\\\"card\\\">\\r\\n    <div class=\\\"card-header bg-primary text-white\\\">\\r\\n      Please sign in\\r\\n    </div>\\r\\n      <div class=\\\"card-body\\\">\\r\\n\\r\\n    <form class=\\\"panel-body\\\" name=\\\"form1\\\" #form1=\\\"ngForm\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                  <span class=\\\"input-group-text\\\">\\r\\n                      <i class=\\\"fa fa-fw fa-user\\\"></i>\\r\\n                  </span>\\r\\n              </div>\\r\\n              <input type=\\\"text\\\" name=\\\"WebLogin_txtUsername\\\"\\r\\n                   id=\\\"WebLogin_txtUsername\\\"\\r\\n                   class=\\\"form-control\\\"\\r\\n                   placeholder=\\\"Enter your user name\\\"\\r\\n                   [(ngModel)]=\\\"username\\\"\\r\\n                   autocapitalize=\\\"off\\\"\\r\\n                   autocomplete=\\\"off\\\"\\r\\n                   spellcheck=\\\"false\\\"\\r\\n                   autocorrect=\\\"off\\\" required />\\r\\n          </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <div class=\\\"input-group\\\">\\r\\n            <div class=\\\"input-group-prepend\\\">\\r\\n                <span class=\\\"input-group-text\\\">\\r\\n                    <i class=\\\"fa fa-fw fa-unlock-alt\\\"></i>\\r\\n                </span>\\r\\n            </div>\\r\\n          <input type=\\\"password\\\" name=\\\"password\\\"\\r\\n                 id=\\\"password\\\"\\r\\n                 class=\\\"form-control\\\"\\r\\n                 placeholder=\\\"Enter your password\\\"\\r\\n                 [(ngModel)]=\\\"password\\\"\\r\\n                 autocapitalize=\\\"off\\\"\\r\\n                 autocomplete=\\\"off\\\"\\r\\n                 spellcheck=\\\"false\\\"\\r\\n                 autocorrect=\\\"off\\\"\\r\\n                 required />\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"small \\\" >You can use: uid: test / pwd: test</div>\\r\\n      <hr />\\r\\n\\r\\n      <button class=\\\"btn btn-primary\\\"\\r\\n              type=\\\"button\\\"\\r\\n              (click)=\\\"login()\\\"\\r\\n              [disabled]=\\\"form1.invalid || form1.pristine\\\" >\\r\\n        <i class=\\\"fa fa-unlock-alt\\\"></i>\\r\\n        Login\\r\\n      </button>\\r\\n\\r\\n      <div class=\\\"pull-right\\\">\\r\\n        <button class=\\\"btn btn-default btn-sm pull-right\\\" style=\\\"display:block\\\"\\r\\n                type=\\\"button\\\"\\r\\n                (click)=\\\"logout()\\\" [disabled]=\\\"!user.isAuthenticated\\\">\\r\\n          <i class=\\\"fa fa-unlock-alt\\\"></i>\\r\\n          Logout\\r\\n        </button>\\r\\n      </div>\\r\\n\\r\\n    </form>\\r\\n\\r\\n          </div>\\r\\n      </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {UserInfo} from \"../business/userInfo\";\r\nimport {ErrorInfo} from \"./errorDisplay\";\r\n\r\ndeclare var toastr:any;\r\n\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\n\r\n@Component({\r\n    //moduleId: module.id,\r\n    selector: 'login',\r\n    templateUrl: 'login.html'\r\n})\r\nexport class LoginComponent implements OnInit {\r\n    username:string = \"\";\r\n    password:string = \"\";\r\n    error: ErrorInfo = new ErrorInfo();\r\n\r\n    constructor(public user:UserInfo,\r\n                private route:ActivatedRoute,\r\n                private router: Router)\r\n    {  }\r\n\r\n    ngOnInit() {\r\n\r\n      if (this.route.snapshot.url[0].path == \"logout\")\r\n        this.logout();\r\n    }\r\n\r\n    login() {\r\n      this.user.login(this.username,this.password)\r\n        .subscribe(() => {\r\n            this.user.isAuthenticated = true;\r\n            toastr.success(\"You are logged in.\");\r\n            this.router.navigate([\"/albums\"]);\r\n        },\r\n        (err)=> {\r\n          this.error.error(err);\r\n          this.password=\"\";\r\n          toastr.warning(\"Login failed: \" + err.message);\r\n        });\r\n    }\r\n\r\n    logout() {\r\n        this.user.logout()\r\n          .subscribe((success) => {\r\n            toastr.success(\"Logged out.\");\r\n            this.router.navigate([\"/albums\"]);\r\n          });\r\n    }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"container\\\">  \\r\\n  <h2 class=\\\"page-header-text\\\">\\r\\n    <i class=\\\"fa fa-info-circle\\\"></i>  About the AlbumViewer Sample\\r\\n  </h2>\\r\\n\\r\\n  <div class=\\\"well well-sm\\\">\\r\\n    <h4>ASP.NET Core API backend</h4>\\r\\n    <p>\\r\\n      This application runs an ASP.NET Core 2.0 API server with a\\r\\n      JSON Service backend . \\r\\n    </p>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"well well-sm\\\">\\r\\n    <h4>Angular Front End</h4>\\r\\n    <p>\\r\\n      The client interface uses Angular 7 to provide the front end logic and\\r\\n      UI management features. There are album and artist services that\\r\\n      talk to the backend interface and page level components and child\\r\\n      components that handle individual view pages of the application.\\r\\n    </p>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"well well-sm\\\">\\r\\n    <h4>Mobile enabled based on modified Bootstrap 4.0 Interface</h4>\\r\\n    <p>\\r\\n      The base Bootstrap framework is used for the core UI features\\r\\n      of the interface. The base template has been customized for\\r\\n      this application.\\r\\n    </p>\\r\\n    <p>\\r\\n      The application is mobile focused and uses custom resizing\\r\\n      and toolbar relocation based on the screen/device size used.\\r\\n      The application should be comfortably usable from phone up to full screen\\r\\n      desktop applications.\\r\\n    </p>\\r\\n  </div>\\r\\n\\r\\n  <hr />\\r\\n  <a routerLink=\\\"/albums\\\">Back to Application</a>\\r\\n\\r\\n</div>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'about',\r\n  templateUrl: 'about.html'\r\n})\r\nexport class AboutComponent {\r\n\r\n}\r\n","module.exports = \"<div  class=\\\"container\\\">\\r\\n  \\r\\n  <error-display [error]=\\\"error\\\"></error-display>\\r\\n\\r\\n  <div class=\\\"list-group\\\" style=\\\"margin-top: 20px;\\\">\\r\\n      <style>\\r\\n          .list-group .fa { color: steelblue; font-size: 1.3em;padding-right: 15px;}\\r\\n      </style>\\r\\n    <a  href=\\\"javascript:{}\\\" (click)=\\\"reloadData()\\\" class=\\\"list-group-item list-group-item-action\\\">\\r\\n      <h4 class=\\\"list-group-item-heading\\\">\\r\\n        <i class=\\\"fa fa-fw fa-refresh\\\"></i>\\r\\n        Reset Data\\r\\n      </h4>\\r\\n      <p class=\\\"list-group-item-text\\\">Reset data to original sample data.</p>\\r\\n    </a>\\r\\n\\r\\n    <a routerLink=\\\"/about\\\" class=\\\"list-group-item list-group-item-action\\\">\\r\\n      <h4 class=\\\"list-group-item-heading\\\">\\r\\n        <i class=\\\"fa fa-fw fa-info-circle\\\"></i>\\r\\n        About Album Viewer\\r\\n      </h4>\\r\\n      <p>\\r\\n        <small *ngIf=\\\"config.applicationStats.OsPlatform\\\">Server Platform: {{config.applicationStats.OsPlatform}}</small><br/>\\r\\n        <small *ngIf=\\\"config.applicationStats.AspDotnetVersion\\\">ASP.NET Version: {{config.applicationStats.AspDotnetVersion}}</small><br/>\\r\\n        <small *ngIf=\\\"config.applicationStats.AngularVersion\\\">Angular Version: {{config.applicationStats.AngularVersion}}</small><br>\\r\\n        <small *ngIf=\\\"config.applicationStats.DataMode\\\">Data Mode: {{config.applicationStats.DataMode}}</small>\\r\\n      </p>\\r\\n    </a>\\r\\n\\r\\n    <a routerLink=\\\"/\\\" class=\\\"list-group-item list-group-item-action\\\">\\r\\n      <h4>\\r\\n        <i class=\\\"fa fa-fw fa-home\\\"></i>\\r\\n        Back to Album List\\r\\n      </h4>\\r\\n    </a>\\r\\n    \\r\\n        <a href=\\\"https://github.com/RickStrahl/AlbumViewerVNext\\\" class=\\\"list-group-item list-group-item-action\\\">\\r\\n        <h4>\\r\\n          <i class=\\\"fa fa-fw fa-github\\\"></i>\\r\\n          GitHub \\r\\n        </h4>\\r\\n      </a>\\r\\n      \\r\\n    <div class=\\\"list-group-item list-group-item-action\\\">\\r\\n      <h4><i class=\\\"fa fa-fw fa-gears\\\"></i> Settings</h4>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"control-label\\\" for=\\\"httpBaseUrl\\\">Data Http Base URL:</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"httpBaseUrl\\\"\\r\\n               placeholder=\\\"Data Http BaseUrl\\\" [(ngModel)]=\\\"config.urls.baseUrl\\\">\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <a *ngIf=\\\"!user.isAuthenticated\\\" routerLink=\\\"/login\\\" class=\\\"list-group-item list-group-item-action\\\">\\r\\n      <h4 class=\\\"list-group-item-heading\\\">\\r\\n        <i class=\\\"fa fa-unlock-alt\\\"></i>\\r\\n        Sign in\\r\\n      </h4>\\r\\n    </a>\\r\\n    <a *ngIf=\\\"user.isAuthenticated\\\" routerLink=\\\"/logout\\\" class=\\\"list-group-item list-group-item-action\\\">\\r\\n      <h4 class=\\\"list-group-item-heading\\\">\\r\\n        <i class=\\\"fa fa-lock\\\"></i>\\r\\n        Sign out\\r\\n      </h4>\\r\\n    </a>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"","﻿import { Component, OnInit } from '@angular/core';\r\nimport {AppConfiguration} from \"../business/appConfiguration\";\r\nimport {UserInfo} from \"../business/userInfo\";\r\nimport {ErrorInfo} from \"../common/errorDisplay\";\r\nimport {HttpClient } from \"@angular/common/http\";\r\nimport { ApplicationStats } from '../business/entities';\r\n\r\ndeclare var $:any;\r\ndeclare var toastr:any;\r\ndeclare var window: any;\r\n\r\n@Component({\r\n    selector: 'options',\r\n    templateUrl: 'options.html'    \r\n})\r\nexport class OptionsComponent implements OnInit {\r\n    error: ErrorInfo = new ErrorInfo();\r\n\r\n    constructor(public config: AppConfiguration,\r\n                public user: UserInfo,\r\n                private http: HttpClient) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.config.isSearchAllowed = false;\r\n\r\n        if (this.config.applicationStats.OsPlatform == null) {\r\n            this.http.get<ApplicationStats>(this.config.urls.url(\"applicationStats\"))\r\n\t\t\t\t.subscribe(stats => {\r\n                        this.config.applicationStats = stats;\r\n                        \r\n                        var $ngv = $(\"[ng-version]\");\r\n                        if ($ngv.length > 0)\r\n                            this.config.applicationStats.AngularVersion = $ngv.attr(\"ng-version\");\r\n                    \r\n                },response=> {\r\n\t\t\t\t\tlet obsErr = new ErrorInfo().parseObservableResponseError(response);\r\n\t\t\t\t\tlet msg = (<any> obsErr).error.message;\r\n\t\t\t\t\ttoastr.error(\"Get Application Stats failed: \" + msg);\r\n\t\t\t\t});\r\n        }\r\n    }\r\n\r\n    reloadData() {\r\n        if (!this.user.isAuthenticated)\r\n            window.location.hash = \"login\";\r\n\r\n        this.http.get<boolean>(this.config.urls.url(\"reloadData\") )\r\n\t\t\t.subscribe(\r\n                success => {                    \r\n                    if (success)\r\n                        toastr.success(\"Data has been reloaded.\");\r\n                    else\r\n                        toastr.error(\"Unable to reload data\");\r\n                }, response => {\r\n                    let obsErr = new ErrorInfo().parseObservableResponseError(response);\r\n                    let msg = (<any> obsErr).error.message;\r\n                    toastr.error(\"Data reload failed: \" + msg);\r\n\r\n                    return obsErr;\r\n                });\r\n    }\r\n}\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {  \r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n"],"sourceRoot":""}